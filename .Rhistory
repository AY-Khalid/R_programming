main_data2_an_month_grp2 <- main_data2_an %>%
select(md2an_month, Total_deaths) %>%
group_by(md2an_month) %>%
summarize(Total_Cases = sum(Total_deaths))
main_data2_an_month_grp <- main_data2_an %>%
select(md2an_month, Total_cases) %>%
group_by(md2an_month) %>%
summarize(Total_Cases = sum(Total_cases))
main_data2_an_month_grp2 <- main_data2_an %>%
select(md2an_month, Total_deaths) %>%
group_by(md2an_month) %>%
summarize(Total_deaths = sum(Total_deaths))
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_an_month_grp2$md2an_month, title = list(text = "Years")) %>%
hc_title(text = "Number of deaths By Year") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_an_month_grp2$Total_deaths,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_an_month_grp2$md2an_month, title = list(text = "Months")) %>%
hc_title(text = "Number of deaths By Months") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_an_month_grp2$Total_deaths,
color = "darkred"
)
main_data2_an_death <- as.data.frame(cbind(Years = main_data2_an$md2an_year, Months = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
main_data2_an_death <- as.data.frame(cbind(Years = main_data2_an$md2an_year, Months = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_death_an_plot$Years, title = list(text = "Years")) %>%
hc_title(text = "Number of deaths By Year") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_death_an_plot$Total_deaths,
color = "darkred"
)
rm(main_data2_an_death)
main_data2_an_death <- as.data.frame(cbind(Years = main_data2_an$md2an_year, Months = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
main_data2_an_death <- as.data.frame(cbind(Years = main_data2_an$md2an_year, Months = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Years, Months) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Months) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_death_an_plot$Years, title = list(text = "Years")) %>%
hc_title(text = "Number of deaths By Year") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_death_an_plot$Total_deaths,
color = "darkred"
)
View(main_data2_death_an)
month_order <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") ## Create an order rule to ensure the months display in order of Jan to Dec
main_data2_death_an$Months <- factor(main_data2_death_an$Months, levels = month_order)
View(main_data2_death_an)
main_data2_an_death <- as.data.frame(cbind(Years = main_data2_an$md2an_year, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
write.csv(main_data2_an_death, "main_data2_death.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an <- read.csv("main_data2_death.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Months, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
main_data2_death_an_plot <- main_data2_death_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Years, Total_death) %>%
group_by(Years) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_an_plot)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_death_an_plot$Years, title = list(text = "Years")) %>%
hc_title(text = "Number of deaths By Year") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_death_an_plot$Total_deaths,
color = "darkred"
)
View(main_data2_an_month_grp)
View(main_data2_an_month_grp2)
rm(main_data2_an_month_grp2)
main_data2_an_death_mth <- as.data.frame(cbind(Months = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death_mth, "main_data2_death_mth.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_mth_an <- read.csv("main_data2_death_mth.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
View(main_data2_death_mth_an)
View(main_data2_an$md2an_month)
main_data2_an_death_mth <- as.data.frame(cbind(main_2_mth = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths))
write.csv(main_data2_an_death_mth, "main_data2_death_mth.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_mth_an <- read.csv("main_data2_death_mth.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
View(main_data2_death_mth_an)
main_data2_an_death_mth <- cbind(main_2_mth = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths)
write.csv(main_data2_an_death_mth, "main_data2_death_mth.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_mth_an <- read.csv("main_data2_death_mth.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
View(main_data2_death_mth_an)
## taking the same step as taken on the death by years analysis
View(main_data2_an)
main_data2_an_death_mth <- cbind(main_2_mth = main_data2_an$md2an_month, Total_death =main_data2_an$Total_deaths)
write.csv(main_data2_an_death_mth, "main_data2_death_mth.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
View(main_data2_an_death_mth)
main_data2_an_death_mth <- cbind(as.character(main_2_mth = main_data2_an$md2an_month), Total_death =main_data2_an$Total_deaths)
main_data2_an_death_mth <- cbind(as.character(main_2_mth = main_data2_an$md2an_month), Total_death =main_data2_an$Total_deaths)
main_data2_an_death_mth <- cbind(as.character(main_data2_an$md2an_month), Total_death =main_data2_an$Total_deaths)
write.csv(main_data2_an_death_mth, "main_data2_death_mth.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_mth_an <- read.csv("main_data2_death_mth.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
View(main_data2_death_mth_an)
main_data2_an_death_mth <- cbind(as.character(main_data2_an$md2an_month = "Months"), Total_death =main_data2_an$Total_deaths)
main_data2_an_death_mth <- cbind(Months = as.character(main_data2_an$md2an_month), Total_death =main_data2_an$Total_deaths)
write.csv(main_data2_an_death_mth, "main_data2_death_mth.csv") ## I have to export into another csv file, because the summation of the total deaths using select, group by and summarize function was return an NA value in each of the years.
main_data2_death_mth_an <- read.csv("main_data2_death_mth.csv", row.names = "X") ## whenever I use row.names, the first rows created by default is converted to row names.
View(main_data2_death_mth_an)
main_data2_death_mth_an_plot <- main_data2_death_mth_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Months, Total_death) %>%
group_by(Months) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_mth_an_plot)
View(main_data2_death_mth_an)
main_data2_death_mth_an$Months <- factor(main_data2_death_mth_an$Months, levels = month_order)
month_order <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") ## Create an order rule to ensure the months display in order of Jan to Dec
main_data2_death_mth_an$Months <- factor(main_data2_death_mth_an$Months, levels = month_order)
View(main_data2_death_mth_an)
main_data2_death_mth_an_plot <- main_data2_death_mth_an %>%     ## note that main_data is the name I use to represent the covide 19 datasets and every other data created from it follows the same pattern of name.
select(Months, Total_death) %>%
group_by(Months) %>%
summarize(Total_deaths = sum(Total_death, na.rm = T))
View(main_data2_death_mth_an_plot)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_death_mth_an_plot$Months, title = list(text = "Months")) %>%
hc_title(text = "Number of deaths By Months") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_death_mth_an_plot$Total_deaths,
color = "darkred"
)
ggplot(main_data2_an) +
geom_col(aes(x=md2an_month, y=Total_deaths), fill="darkred") +
labs( title = "Number of deaths By Month",
x = "Months",
y = "Number of deaths") +
scale_y_continuous(labels = unit_format(unit = "M", scale = 1e-6))
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_death_mth_an_plot$Months, title = list(text = "Months")) %>%
hc_title(text = "Number of deaths By Months") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_death_mth_an_plot$Total_deaths,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data2_death_mth_an_plot$Months, title = list(text = "Months")) %>%
hc_title(text = "Number of deaths By Months") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "deaths",
data = main_data2_death_mth_an_plot$Total_deaths,
color = "darkred"
)
rmarkdown::render("covid19.Rmd")
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_case$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries with the Highest number of Deaths") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = md4an_top10_case$Total_death,
color = "darkred"
)
## plot the Top 10 countries with highest number of deaths
ggplot(md4an_top10_case) +
geom_col(aes(x=reorder(location, -Total_death), y=Total_death), fill="darkred") +
labs(
title = "Top 10 countries with the Highest number of Deaths",
x= "Country",
y="Deaths"
) +
scale_y_continuous(labels = unit_format(unit = "M", scale = 1e-6)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_case$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries with the Highest number of Deaths") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = md4an_top10_case$Total_death,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_case$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries with the Highest number of Deaths") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = md4an_top10_case$Total_death,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_per$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries Percentage of Deaths to Population") %>%
hc_yAxis(title = list(text = "Percentage of Deaths")) %>%
hc_add_series(
name = "% Deaths",
data = md4an_top10_per$percentage,
color = "darkred"
)
summarize(Total_population = max(population, na.rm = T),
main_data4 <- main_data %>%
select(location, population, total_deaths, date) %>%
filter(main_data$continent != "" & main_data$total_deaths > 0) %>%
group_by(location) %>%
summarize(Total_population = max(population, na.rm = T),
Total_death = max(total_deaths, na.rm = T),
percentage = round((max(total_deaths, na.rm = T)/max(population, na.rm = T)), 2)) %>%
arrange(desc(percentage))
main_data4 <- main_data %>%
main_data4 <- main_data %>%
select(location, population, total_deaths, date) %>%
filter(main_data$continent != "" & main_data$total_deaths > 0) %>%
group_by(location) %>%
summarize(Total_population = max(population, na.rm = T),
Total_death = max(total_deaths, na.rm = T),
percentage = round((max(total_deaths, na.rm = T)/max(population, na.rm = T)),2)) %>%
arrange(desc(percentage))
View(main_data4)
main_data4 <- main_data %>%
select(location, population, total_deaths, date) %>%
filter(main_data$continent != "" & main_data$total_deaths > 0) %>%
group_by(location) %>%
summarize(Total_population = max(population, na.rm = T),
Total_death = max(total_deaths, na.rm = T),
percentage = round((max(total_deaths, na.rm = T)/max(population, na.rm = T)),4)) %>%
arrange(desc(percentage))
View(main_data4)
write.csv(main_data4, "covid_main_data4.csv")
md4an_ordering2 <- main_data4_an %>%
arrange(desc(percentage))
md4an_top10_per <- head(md4an_ordering2, 10)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_per$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries Percentage of Deaths to Population") %>%
hc_yAxis(title = list(text = "Percentage of Deaths"),
labels = list(
formatter = JS("function() {
return Highcharts.numberFormat(this.value * 100, 0) + '%';}"))) %>%
hc_add_series(
name = "% Deaths",
data = md4an_top10_per$percentage,
color = "darkred"
)
main_data4_an <- read.csv("covid_main_data4.csv") ## this represent the number of deaths per countries
md4an_ordering1 <- main_data4_an %>%
arrange(desc(Total_death))
md4an_top10_case <- head(md4an_ordering1, 10)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_case$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries with the Highest number of Deaths") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = md4an_top10_case$Total_death,
color = "darkred"
)
md4an_ordering2 <- main_data4_an %>%
arrange(desc(percentage))
md4an_top10_per <- head(md4an_ordering2, 10)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_per$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries Percentage of Deaths to Population") %>%
hc_yAxis(title = list(text = "Percentage of Deaths"),
labels = list(
formatter = JS("function() {
return Highcharts.numberFormat(this.value * 100, 0) + '%';}"))) %>%
hc_add_series(
name = "% Deaths",
data = md4an_top10_per$percentage,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_per$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries Percentage of Deaths to Population") %>%
hc_yAxis(title = list(text = "Percentage of Deaths")) %>%
hc_add_series(
name = "% Deaths",
data = md4an_top10_per$percentage,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md4an_top10_per$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 countries Percentage of Deaths to Population") %>%
hc_yAxis(title = list(text = "Percentage of Deaths")) %>% ## I did not apply the percentage formatting on the y-axis of this chart, because the percentages are way too small.
hc_add_series(
name = "% Deaths",
data = md4an_top10_per$percentage,
color = "darkred"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data5_an$location, title = list(text = "Continent")) %>%
hc_title(text = "Number of Deaths by Continent") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = main_data5_an$Total_death,
color = "darkred"
)
View(main_data5_an1)
main_data5_an_ord <- main_data5_an %>%
arrange(desc(main_data2_an$Total_deaths))
main_data5_an_ord <- head(main_data2_an,6) %>%
arrange(desc(main_data2_an$Total_deaths))
main_data5_an_ord <- head(main_data2_an,6) %>%
arrange(desc(main_data2_an$Total_deaths))
main_data5_an_ord <- main_data5_an %>%
order_by(main_data5_an$Total_death, desc)
main_data5_an_ord <- main_data5_an %>%
order_by(main_data5_an$Total_death, ascending = FALSE)
main_data5_an2 <- cbind(main_data5_an$location, main_data5_an$Total_death)
View(main_data5_an2)
main_data5_an2 <- cbind(location = main_data5_an$location, Total_death = main_data5_an$Total_death)
View(main_data5_an2)
main_data5_an2 <- cbind(location = main_data5_an$location, Total_death = main_data5_an$Total_death) %>%
arrange(desc(Total_death))
main_data5_an2 <- cbind(location = main_data5_an$location, Total_death = main_data5_an$Total_death) %>%
select(location, Total_death) %>%
arrange(desc(Total_death))
write.csv(main_data5_an2, "main_data5_an2.csv")
## importing the file
main_data5_an2_imp <- read.csv("main_data5_an2.csv")
View(main_data5_an2_imp)
main_data5_an2_ord <- main_data5_an2_imp %>%
arrange(desc(main_data5_an2_imp$Total_death))
View(main_data5_an2_ord)
## importing the file
main_data5_an2_imp <- read.csv("main_data5_an2.csv", row.names = "X")
View(main_data5_an2_imp) ## view the data
main_data5_an2_ord <- main_data5_an2_imp %>%
arrange(desc(main_data5_an2_imp$Total_death))  ## ordering in descending order.
View(main_data5_an2_ord) ## view the data.
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data5_an2_ord$location, title = list(text = "Continent")) %>%
hc_title(text = "Number of Deaths by Continent") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = main_data5_an2_ord$Total_death,
color = "darkred"
)
ggplot(main_data5_an) +
geom_col(aes(x=reorder(location, -Total_death), y=Total_death), fill="darkred") +
scale_y_continuous(labels = unit_format(unit = "M", scale = 1e-6)) +
labs(
title = "Number of Deaths by Continent",
x = "Continent",
y = "Number of Deaths")
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = main_data5_an2_ord$location, title = list(text = "Continent")) %>%
hc_title(text = "Number of Deaths by Continent") %>%
hc_yAxis(title = list(text = "Total deaths")) %>%
hc_add_series(
name = "Deaths",
data = main_data5_an2_ord$Total_death,
color = "darkred"
)
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md6an_top10_vacc$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 Countries With Most Vaccines Administered") %>%
hc_yAxis(title = list(text = "Number of Vaccines")) %>%
hc_add_series(
name = "Vaccines",
data = md6an_top10_vacc$Total_vaccinations,
color = "darkgreen"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md6an_top10_vacc$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 Countries With Most Vaccines Administered") %>%
hc_yAxis(title = list(text = "Number of Vaccines"),
labels = list(
formatter = JS("function() { return this.value / 1000000000 + 'B'; }"))) %>%
hc_add_series(
name = "Vaccines",
data = md6an_top10_vacc$Total_vaccinations,
color = "darkgreen"
)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md6an_vac_cases$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 Countries Rate of Vaccines administered To Population") %>%
hc_yAxis(title = list(text = "Rates"),
labels = list(
formatter = JS("function() {
return Highcharts.numberFormat(this.value * 100, 0) + '%';}"))) %>% ## i browse for the formula to convert y-axis to percentage in highcharter.
hc_add_series(
name = "Rate-Vacc. to Pop",
data = md6an_vac_cases$per_cases_to_vac,
color = "darkgreen"
)
per_cases_to_vac <- round(main_data6_an$Total_vaccinations/main_data6_an$Population,2)
md6an_vac_cases <- cbind(main_data6_an, per_cases_to_vac) %>%
arrange(desc(per_cases_to_vac))
md6an_vac_cases <- head(md6an_vac_cases, 10)
View(md6an_vac_cases)
plot13 <- ggplot(md6an_vac_cases) +
geom_col(aes(x=reorder(location, -per_cases_to_vac), y=per_cases_to_vac), fill="darkgreen") +
scale_y_continuous(labels = percent_format(scale = 100)) +
labs(
title = "Rate of Vaccines To countries Compare To their Population (Top 10)",
x = "Countries",
y = "Rates"
)
plot14 <- ggplot(md6an_top10_vacc) +
geom_col(aes(x=reorder(location, -Total_vaccinations), y=Total_vaccinations), fill="darkgreen") +
scale_y_continuous(labels = unit_format(unit = "B", scale = 1e-9) ) +
labs(
title = "Vaccinations To Countries (Top 10)",
x = "Countries",
y = "Vaccines"
)
per_cases_to_vac <- round(main_data6_an$Total_vaccinations/main_data6_an$Population,2)
highchart() %>%
hc_chart(type = "column") %>%
hc_xAxis(categories = md6an_vac_cases$location, title = list(text = "Country")) %>%
hc_title(text = "Top 10 Countries Rate of Vaccines administered To Population") %>%
hc_yAxis(title = list(text = "Rates"),
labels = list(
formatter = JS("function() {
return Highcharts.numberFormat(this.value * 100, 0) + '%';}"))) %>% ## i browse for the formula to convert y-axis to percentage in highcharter.
hc_add_series(
name = "Rate-Vacc. to Pop",
data = md6an_vac_cases$per_cases_to_vac,
color = "darkgreen"
)
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
rmarkdown::render("covid19.Rmd")
